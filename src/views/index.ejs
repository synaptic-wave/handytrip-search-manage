<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  </head>
  <body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
      <div class="container">
        <a class="navbar-brand" href="/"><%= title %></a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
          <ul class="navbar-nav">
            <li class="nav-item">
              <a class="nav-link" href="/data">데이터 관리</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/search">검색</a>
            </li>
          </ul>
        </div>
      </div>
    </nav>

    <div class="container mt-4">
      <div class="row">
        <div class="col-md-12">
          <h1>환영합니다!</h1>
          <p>이 시스템은 MariaDB와 Elasticsearch를 연동하여 데이터를 관리하고 검색할 수 있습니다.</p>
        </div>
      </div>
    </div>

    <div class="row">
      <div class="col-12">
        <h2 class="mb-4">검색어 관리</h2>
        <div class="card">
          <div class="card-body">
            <div class="mb-3">
              <label for="searchType" class="form-label">검색 타입</label>
              <select class="form-select" id="searchType">
                <option value="HOTEL">호텔</option>
                <option value="ZONE">지역</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="searchQuery" class="form-label">검색어</label>
              <input type="text" class="form-control" id="searchQuery" placeholder="검색어를 입력하세요" />
            </div>
            <button class="btn btn-primary" onclick="search()">검색</button>
          </div>
        </div>

        <div class="mt-4" id="searchResults" style="display: none">
          <h3>검색 결과</h3>
          <div class="table-responsive">
            <table class="table table-hover">
              <thead>
                <tr>
                  <th>ID</th>
                  <th>이름</th>
                  <th>작업</th>
                </tr>
              </thead>
              <tbody id="searchResultsBody"></tbody>
            </table>
          </div>
        </div>

        <!-- 수정 모달 -->
        <div class="modal fade" id="editModal" tabindex="-1">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title">검색어 수정</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
              </div>
              <div class="modal-body">
                <input type="hidden" id="editItemId" />
                <input type="hidden" id="editItemType" />
                <div class="mb-3">
                  <label class="form-label">현재 이름</label>
                  <input type="text" class="form-control" id="currentName" readonly />
                </div>
                <div class="mb-3">
                  <label class="form-label">새 이름</label>
                  <input type="text" class="form-control" id="newName" />
                </div>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
                <button type="button" class="btn btn-primary" onclick="submitEdit()">저장</button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <%- contentFor('script') %>
    <script>
      let editModal;

      document.addEventListener("DOMContentLoaded", function () {
        editModal = new bootstrap.Modal(document.getElementById("editModal"));
      });

      async function search() {
        const type = document.getElementById("searchType").value;
        const query = document.getElementById("searchQuery").value;

        if (!query.trim()) {
          alert("검색어를 입력해주세요.");
          return;
        }

        try {
          // TODO: 실제 검색 API 연동
          const results = [
            { id: 1, name: "테스트 호텔 1" },
            { id: 2, name: "테스트 호텔 2" },
          ];

          const tbody = document.getElementById("searchResultsBody");
          tbody.innerHTML = results
            .map(
              (item) => `
                <tr>
                    <td>${item.id}</td>
                    <td>${item.name}</td>
                    <td>
                        <button class="btn btn-sm btn-primary" onclick="showEditModal('${item.id}', '${type}', '${item.name}')">
                            수정
                        </button>
                    </td>
                </tr>
            `
            )
            .join("");

          document.getElementById("searchResults").style.display = "block";
        } catch (error) {
          console.error("검색 중 오류가 발생했습니다:", error);
          alert("검색 중 오류가 발생했습니다.");
        }
      }

      function showEditModal(id, type, name) {
        document.getElementById("editItemId").value = id;
        document.getElementById("editItemType").value = type;
        document.getElementById("currentName").value = name;
        document.getElementById("newName").value = "";
        editModal.show();
      }

      async function submitEdit() {
        const id = document.getElementById("editItemId").value;
        const type = document.getElementById("editItemType").value;
        const nameBefore = document.getElementById("currentName").value;
        const nameAfter = document.getElementById("newName").value;

        if (!nameAfter.trim()) {
          alert("새 이름을 입력해주세요.");
          return;
        }

        try {
          await axios.post("/api/histories", {
            type,
            name_before: nameBefore,
            name_after: nameAfter,
            target_id: id,
          });

          editModal.hide();
          alert("수정 요청이 등록되었습니다.");
          search(); // 검색 결과 새로고침
        } catch (error) {
          console.error("수정 요청 중 오류가 발생했습니다:", error);
          alert("수정 요청 중 오류가 발생했습니다.");
        }
      }
    </script>
  </body>
</html>
